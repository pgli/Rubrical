@model Rubrical.Models.Rubric
@using Newtonsoft.Json

@{
    ViewData["Title"] = Model.Title;
}

@section scripts {
    <script>var modelData = @Html.Raw(JsonConvert.SerializeObject(Model));</script>
    <script src="~/js/rubric.js"></script>
    <script>
        $(document).ready(function () {
            $("td").each(function (index, value) {
                $(this).html(decodeHtml($(this).text()))
            });
        });
    </script>
}

<style>
    h5 {
        text-align: center;
    }

    #upvoteDiv {
        float: right;
        margin: 10px;
    }

        #upvoteDiv, #upvoteDiv * {
            display: inline-block;
            vertical-align: middle;
        }

            #upvoteDiv p {
                margin: 10px;
            }

            #upvoteDiv a i {
                color: grey;
            }

    .table td, .table th {
        min-width: 100px;
    }

    #buttonAddRow, #buttonAddColumn, #buttonSaveChanges, #selectPrivacy, #buttonDelete {
        display: none;
    }

    #selectPrivacy {
        width: 100px;
    }

    .upvoted {
        color: green !important;
    }

    .downvoted {
        color: red !important;
    }

    #buttonDelete {
        position: fixed;
        bottom: 90px;
        left: 20px;
        z-index: 99999;
    }
</style>

@if (ViewBag.IsOwner == false)
{
    <div id="upvoteDiv">
        <a href="#" name="vote" data-vote-type="up"><i class="fa fa-thumbs-up fa-2x @(ViewBag.Rating == 1 ? "upvoted" : "")"></i></a>
        <p>@Model.TotalRating</p>
        <a href="#" name="vote" data-vote-type="down"><i class="fa fa-thumbs-down fa-2x @(ViewBag.Rating == 0 ? "downvoted" : "")"></i></a>
    </div>
}

<h1>@Model.Title</h1>
<h5>@Model.Description</h5>

<table class="table table-hover table-bordered" id="rubric">
    @foreach (var row in Model.Rows.OrderBy(r => r.Id))
    {
        <tr class="table-primary" data-row-id="@row.Id">
            @foreach (var cell in row.Cells.OrderBy(c => c.Id))
            {
                <td data-cell-id="@cell.Id" name="cell">@cell.Text</td>
            }
        </tr>
    }
</table>

@if (ViewBag.IsOwner == true)
{
    <button type="button" class="btn btn-warning" id="buttonEditContents"><i class="fa fa-pencil"></i> Edit</button>
    <hr />
    <button type="button" class="btn btn-primary edit-toggle" id="buttonAddRow"><i class="fa fa-plus"></i> Add Row</button>
    <button type="button" class="btn btn-primary edit-toggle" id="buttonAddColumn"><i class="fa fa-plus"></i> Add Column</button>
    <hr />
    <select class="custom-select edit-toggle" id="selectPrivacy">
        @if (Model.IsPrivate)
        {
            <option value="1" selected>Private</option>
            <option value="0">Public</option>
        }
        else
        {
            <option value="0" selected>Public</option>
            <option value="1">Private</option>
        }
    </select>
    <hr />
    <button type="button" class="btn btn-danger edit-toggle" id="buttonDelete">Delete Rubric</button>
}

@if (User.IsInRole("Admin"))
{
    <button type="button" class="btn btn-danger edit-toggle" id="buttonDelete" style="display: block;">Delete Rubric</button>
}